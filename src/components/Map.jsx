import React, { useState, useEffect } from "react";
import LoginModal from "./LoginModal";
import bg from "../assets/images/bg.png";

export default function Map({ onSelect, isAdmin, onAdminLogin, onAdminLogout }) {
  const [loginOpen, setLoginOpen] = useState(false);
  const [clickCount, setClickCount] = useState(0);
  const [showHint, setShowHint] = useState(false);

  const doLogin = async (pwd) => {
    const res = await onAdminLogin?.(pwd);
    if (res?.ok) setLoginOpen(false);
    return res;
  };

  const openLogin = (e) => {
    e.stopPropagation();
    setLoginOpen(true);
  };

  const logout = (e) => {
    e.stopPropagation();
    onAdminLogout?.();
  };

  // üëâ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–≤–∏–¥–∏–º–æ–π –∫–Ω–æ–ø–∫–∏ –≤—ã—Ö–æ–¥–∞
  const handleSecretClick = () => {
    setClickCount((prev) => {
      const newCount = prev + 1;
      setShowHint(true);

      if (newCount >= 7) {
        setClickCount(0);
        setShowHint(false);
        window.api.appQuit(); // –≤—ã—Ö–æ–¥–∏–º
      }

      return newCount;
    });
  };

  // üëâ —Å–±—Ä–æ—Å —Å—á—ë—Ç—á–∏–∫–∞, –µ—Å–ª–∏ –ø–∞—É–∑–∞ –¥–æ–ª—å—à–µ 4 —Å–µ–∫
  useEffect(() => {
    if (clickCount > 0) {
      const timer = setTimeout(() => {
        setClickCount(0);
        setShowHint(false);
      }, 4000);
      return () => clearTimeout(timer);
    }
  }, [clickCount]);

  return (
      <div className="map">
        {/* –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ–º 16:9 */}
        <div className="map-container">
          <img className="map-image" src={bg} alt="map" draggable={false} />

          {/* –∫–Ω–æ–ø–∫–∏ ‚Äî —Ç–µ–ø–µ—Ä—å –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ, —Å top/left –≤ % */}
          <button className="region-button btn-angola" onClick={() => onSelect("–ê–Ω–≥–æ–ª–∞")}>–ê–Ω–≥–æ–ª–∞</button>
          <button className="region-button btn-afghanistan" onClick={() => onSelect("–ê—Ñ–≥–∞–Ω–∏—Å—Ç–∞–Ω")}>–ê—Ñ–≥–∞–Ω–∏—Å—Ç–∞–Ω</button>
          <button className="region-button btn-karabakh" onClick={() => onSelect("–ù–∞–≥–æ—Ä–Ω—ã–π –ö–∞—Ä–∞–±–∞—Ö")}>–ù–∞–≥–æ—Ä–Ω—ã–π –ö–∞—Ä–∞–±–∞—Ö</button>
          <button className="region-button btn-syria" onClick={() => onSelect("–°–∏—Ä–∏—è")}>–°–∏—Ä–∏—è</button>
          <button className="region-button btn-tajikistan" onClick={() => onSelect("–¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω")}>–¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω</button>
          <button className="region-button btn-chechnya" onClick={() => onSelect("–ß–µ—á–Ω—è")}>–ß–µ—á–Ω—è</button>
          <button className="region-button btn-ethiopia" onClick={() => onSelect("–≠—Ñ–∏–æ–ø–∏—è")}>–≠—Ñ–∏–æ–ø–∏—è</button>
          <button className="region-button btn-svo" onClick={() => onSelect("–ó–æ–Ω–∞ –°–í–û")}>–ó–æ–Ω–∞ –°–í–û</button>
        </div>

        {/* –∞–¥–º–∏–Ω FAB */}
        {!isAdmin ? (
            <button
                type="button"
                className="admin-fab"
                title="–†–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
                onClick={openLogin}
                style={{
                  zIndex: 2147483647,
                  pointerEvents: "auto",
                }}
            >
              üîê
            </button>
        ) : (
            <button
                type="button"
                className="admin-fab"
                title="–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω-—Ä–µ–∂–∏–º–∞"
                onClick={logout}
                style={{
                  zIndex: 2147483647,
                  pointerEvents: "auto",
                }}
            >
              üö™
            </button>
        )}

        {loginOpen && (
            <LoginModal
                open={loginOpen}
                onClose={() => setLoginOpen(false)}
                onSubmit={doLogin}
            />
        )}

        {/* üî¥ –ù–µ–≤–∏–¥–∏–º–∞—è –∑–æ–Ω–∞ –≤—ã—Ö–æ–¥–∞ */}
        <div
            style={{
              position: "fixed",
              bottom: 10,
              right: 10,
              width: 60,
              height: 60,
              opacity: 0,
              zIndex: 99999,
              cursor: "pointer",
            }}
            onClick={handleSecretClick}
        />

        {/* üîµ –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–ª–∏–∫–æ–≤ */}
        {showHint && (
            <div
                style={{
                  position: "fixed",
                  bottom: 80,
                  right: 10,
                  background: "rgba(0,0,0,0.6)",
                  color: "#fff",
                  padding: "6px 12px",
                  borderRadius: "8px",
                  fontSize: "14px",
                  zIndex: 100000,
                }}
            >
              üîë {clickCount}/7
            </div>
        )}
      </div>
  );
}
