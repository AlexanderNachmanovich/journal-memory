import React, { useEffect, useState } from "react";
import bg2 from "../assets/images/bg2.png";   // —Ñ–æ–Ω –∫–Ω–∏–≥–∏
import PhotoViewer from "./PhotoViewer";      // ‚úÖ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–ø–∞–ø–∞

export default function PersonCard({
                                     person,
                                     onBackToList,
                                     onBackToMap,
                                     onDelete,
                                     onEdit,
                                     isAdmin,
                                     onAdminLogout,
                                   }) {
  const photoSrc = person.photoPath ? `photos://${person.photoPath}` : null;
  const [viewerIndex, setViewerIndex] = useState(null); // ‚úÖ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–ø–∞–ø–∞

  // –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º —Ñ–æ–Ω –∫–Ω–∏–≥–∏
  useEffect(() => {
    document.documentElement.style.setProperty("--book-bg", `url(${bg2})`);
  }, []);

  return (
      <div className="book-container">
        <div className="book-wrapper">
          {/* –õ–µ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ */}
          <div className="book-page left-page">
            <h1>–ö–ù–ò–ì–ê –ü–ê–ú–Ø–¢–ò</h1>

            <button className="back-button" onClick={onBackToList}>
              ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É
            </button>
            <button className="back-button" onClick={onBackToMap}>
              ‚Üê –í—ã—Ö–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É –º–∏—Ä–∞
            </button>

            {isAdmin && (
                <>
                  <button className="edit-button" onClick={onEdit}>
                    ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                  </button>
                  <button className="delete-button" onClick={onDelete}>
                    üóë –£–¥–∞–ª–∏—Ç—å
                  </button>
                  <button
                      className="back-button"
                      style={{ marginTop: 8 }}
                      onClick={() => onAdminLogout?.()}
                  >
                    ‚á¶ –í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω-—Ä–µ–∂–∏–º–∞
                  </button>
                </>
            )}
          </div>

          {/* –ü—Ä–∞–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ */}
          <div className="book-page right-page person-details">
            {photoSrc && (
                <img src={photoSrc} alt={person.name} className="person-photo" />
            )}
            <h2 style={{ marginBottom: 8 }}>{person.name}</h2>

            {person.birthDate && (
                <div style={{ marginBottom: 8 }}>
                  –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:{" "}
                  {person.birthDate.split("-").reverse().join(".")}
                </div>
            )}

            {person.region && (
                <div style={{ marginBottom: 8 }}>–†–µ–≥–∏–æ–Ω: {person.region}</div>
            )}

            {/* –ë–∏–æ–≥—Ä–∞—Ñ–∏—è + –º–∏–Ω–∏–∞—Ç—é—Ä—ã —Ñ–æ—Ç–æ */}
            {(person.biography || person.extraPhotos?.length > 0) && (
                <div className="biography-box">
                  {person.biography && <div>{person.biography}</div>}

                  {person.extraPhotos?.length > 0 && (
                      <div className="extra-photos">
                        {person.extraPhotos.map((p, idx) => (
                            <img
                                key={p.id || idx}
                                src={`photos://${p.filePath}`}
                                alt={`${person.name} —Ñ–æ—Ç–æ ${idx + 1}`}
                                className="extra-photo"
                                onClick={() => setViewerIndex(idx)} // ‚úÖ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ–ø–∞–ø
                            />
                        ))}
                      </div>
                  )}
                </div>
            )}
          </div>
        </div>

        {/* –ü–æ–ø–∞–ø –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–æ—Ç–æ */}
        {viewerIndex !== null && Array.isArray(person.extraPhotos) && (
            <PhotoViewer
                photos={person.extraPhotos}
                startIndex={viewerIndex}
                onClose={() => setViewerIndex(null)}
            />
        )}
      </div>
  );
}
